package src.com.leveldown.main;import java.awt.Color;import java.awt.Font;import java.awt.Graphics;import java.awt.Graphics2D;import java.awt.RenderingHints;import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.File;import java.io.FileNotFoundException;import java.io.FileReader;import java.io.FileWriter;import java.io.IOException;import src.com.leveldown.world.World;public class Menu {   public static String[] options = new String[]{"Novo jogo", "Carregar jogo", "Sair"};   public static int currentOption = 0;   public static int maxOption = options.length - 1;   private static int dx;   private static int dy;   public static boolean pause = false;   public static boolean saveExists = false;   public static boolean saveGame = false;   public boolean up;   public boolean down;   public boolean enter;   public static File file = new File("save.txt");      public void tick() {	  	  	  if(file.exists()) {		  saveExists = true;	  }else {		  saveExists = false;	  }	        if (this.up) {         this.up = false;         --currentOption;         if (currentOption < 0) {            currentOption = maxOption;         }      }      if (this.down) {         this.down = false;         ++currentOption;         if (currentOption > maxOption) {            currentOption = 0;         }      }      if (this.enter) {          this.enter = false;         if (options[currentOption] == "Sair") {        	 System.exit(1);         }         else if(options[currentOption] == "Carregar jogo") {            	   file = new File("save.txt");            	   if(file.exists()) {            		   String saver = loadGame(10);            		   applySave(saver);            	   }         }         else {        	Game.gameState = "NORMAL";        	pause = false;         }      }   }    public static void applySave(String str) {	   String[] spl = str.split("/");	   for(int i = 0; i < spl.length; i++) {		   String[] spl2 = spl[i].split(":");		   switch(spl2[0]) {		   case "level":			   Game.CUR_LEVEL = Integer.parseInt(spl2[1]);			   World.restartGame("level"+spl2[1]+".png");			   Game.gameState = "NORMAL";			   pause = false;			   break;		   }	   }   }      public static String loadGame(int encode) {	   String line = "";	   File file = new File("save.txt");	   if(file.exists()) {		   try {			   String singleLine = null;			   BufferedReader reader = new BufferedReader(new FileReader("save.txt"));			   try {				   while((singleLine = reader.readLine())!= null) {					   String[] trans = singleLine.split(":");					   char[] val = trans[1].toCharArray();					   trans[1] = "";					   for(int i = 0; i < val.length; i++) {						   //val[i]-=encode;						   trans[1]+=val[i];					   }					   line+=trans[0];					   line+=":";					   line+=trans[1];					   line+="/";				   }			   }catch(IOException e) {}		   }catch(FileNotFoundException e) {}	   }	   	   return line;	      }      public static void saveGame(String[] val1 , int[] val2 , int encode) {	   BufferedWriter write = null;	   try {		   write = new BufferedWriter(new FileWriter("save.txt"));		   	   }catch(IOException e) {		   e.printStackTrace();	   }	   	   for(int i = 0; i < val1.length; i++) {		   String current = val1[i];		   current+=":";		   char[] value = Integer.toString(val2[i]).toCharArray();		   for(int n = 0; n < value.length; n++) {			   //value[n]+=encode;			   current+=value[n];		   }		   try {			   write.write(current);			   if(i < val1.length - 1);			   		write.newLine();		   }catch(IOException e) {}	   }	   try {		   write.flush();		   write.close();	   }catch(IOException e) {}   }      public static void render(Graphics g) {     Graphics2D g2 = (Graphics2D)g;     g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,     		  			 RenderingHints.VALUE_TEXT_ANTIALIAS_LCD_HRGB);     g2.setColor(new Color(0, 0, 0, 100));     g2.fillRect(0, 0, 720, 480);     g2.setFont(new Font("arial", 1, 24));     g.setColor(Color.black);     g.drawString("Resident Vitor", -222 + dx, 50);     g.setColor(Color.red);     g.drawString("Resident Vitor", -221 + dx, 49);          for (dx = 0; dx < 249; dx += 3) {}	 //for (dy = 0; dy <= 25; dy++) {		 //g2.setFont(new Font("arial", 1, 24));		 //g.setColor(Color.red);	     //g.drawString("⠀.⠀.⠀⠀⠀.⠀⠀⠀⠀⠀.", -221 + dx, dy + 49);	     //g.setColor(Color.black);	     //g.drawString("⠀.⠀.⠀⠀⠀.⠀⠀⠀⠀⠀.", -222 + dx, dy + 50);	 //}	      g2.setFont(new Font("arial", 1, 15));     g.setColor(Color.white);     if (pause) {        g.drawString("Voltar", 40, 80);     } else {        g.drawString(options[0], 40, 80);     }     g.drawString(options[1], 40, 100);     g.drawString(options[2], 40, 120);     if (options[currentOption] == "Novo jogo" || options[currentOption] == "Continuar") {        g.drawString(">", 23, 80);     } else if (options[currentOption] == "Carregar jogo") {        g.drawString(">", 23, 100);     } else if (options[currentOption] == "Sair") {        g.drawString(">", 23, 120);     }   }}